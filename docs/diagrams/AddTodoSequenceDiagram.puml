@startuml
'https://plantuml.com/sequence-diagram
!include style.puml

box Logic LOGIC_COLOR_T2
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CalidrParser" as CalidrParser LOGIC_COLOR
participant ":AddTodoCommandParser" as AddTodoCommandParser LOGIC_COLOR
participant ":AddTodoCommand" as AddTodoCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR
participant ":Model" as Model MODEL_COLOR_T2
end box

[-> LogicManager : execute("command to add a to-do")
activate LogicManager

LogicManager -> CalidrParser : parseCommand("command to add a to-do")
activate CalidrParser

create AddTodoCommandParser
CalidrParser -> AddTodoCommandParser
activate AddTodoCommandParser
AddTodoCommandParser --> CalidrParser
deactivate AddTodoCommandParser

CalidrParser -> AddTodoCommandParser : parse("command to add a to-do")
activate AddTodoCommandParser

create AddTodoCommand
AddTodoCommandParser -> AddTodoCommand
activate AddTodoCommand
AddTodoCommand --> AddTodoCommandParser
deactivate AddTodoCommand

AddTodoCommandParser --> CalidrParser : command to add the to-do
deactivate AddTodoCommandParser

CalidrParser --> LogicManager : command to add the to-do
deactivate CalidrParser

LogicManager -> AddTodoCommand : execute()
activate AddTodoCommand

AddTodoCommand -> Model : hasTask()
activate Model
Model --> AddTodoCommand
deactivate Model

AddTodoCommand -> Model : addTask()
activate Model
deactivate Model

create CommandResult
AddTodoCommand -> CommandResult
activate CommandResult
CommandResult --> AddTodoCommand
deactivate CommandResult

AddTodoCommand --> LogicManager : result
deactivate AddTodoCommand

[<-- LogicManager
deactivate LogicManager

@enduml